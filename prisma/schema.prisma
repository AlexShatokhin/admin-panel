// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  login       String    @unique
  name        String
  password    String
  role        Role      @default(WORKER)
  tasks       Task[]    @relation("AssignedTasks")
  createdTasks Task[]   @relation("CreatedTasks")
  logs        ActionLog[]
  createdAt   DateTime  @default(now())
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String
  status      TaskStatus @default(PENDING)
  assignedTo  User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?
  createdBy   User       @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model ActionLog {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  action    String
  meta      Json
  timestamp DateTime  @default(now())
}

enum Role {
  ADMIN
  MANAGER
  WORKER
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
}
